#!./guile
!# ;; -*-scheme-*-

;;; Copyright (C) 2019 Rob Browning <rlb@defaultvalue.org>
;;; SPDX-License-Identifier: LGPL-2.1-or-later OR EPL-1.0+

(use-modules
 ((lokke scm test) #:select (test-end-and-exit))
 ((lokke scm test-anything) #:select (tap-test-runner))
 ((lokke symbol) #:prefix t/)
 ((srfi srfi-64)
  #:select (test-assert test-begin test-equal test-group test-runner-current)))

(when (equal? "tap" (getenv "LOKKE_TEST_PROTOCOL"))
  (test-runner-current (tap-test-runner)))

(test-begin (basename (car (program-arguments))))

(define parsed-sym (@@ (lokke symbol) make-parsed-sym))

;; Perhaps we'll move some or all of these tests to the clojure level
;; in say test/clojure-symbol, but it might still be useful to test
;; parse-symbol directly here.

(test-equal (parsed-sym #f 'x) (t/parse-symbol 'x))
(test-equal (parsed-sym #f 'x.y) (t/parse-symbol 'x.y))
(test-equal (parsed-sym 'x.y 'z) (t/parse-symbol 'x.y/z))

(test-equal #nil (t/namespace 'join))
(test-equal #nil (t/namespace #:join))
(test-equal "str" (t/namespace 'str/join))
(test-equal "str" (t/namespace #:str/join))

(test-end-and-exit 2)
